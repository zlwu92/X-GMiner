CMAKE_MINIMUM_REQUIRED(VERSION 3.12)
PROJECT(GraphMining LANGUAGES CXX CUDA)
INCLUDE_DIRECTORIES(include)
INCLUDE_DIRECTORIES(gpu)

SET(CMAKE_BUILD_TYPE RELEASE)
set(CMAKE_CXX_STANDARD 14)
# SET(CMAKE_BUILD_TYPE DEBUG)
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb -march=native")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall -march=native")
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/libs)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)


find_package(OpenMP REQUIRED)
if(OPENMP_FOUND)
    message("OPENMP FOUND")
    INCLUDE_DIRECTORIES(${OpenMP_INCLUDE_DIRS})
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}" )
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  ${OpenMP_CXX_FLAGS}" )
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}  ${OpenMP_CXX_FLAGS}" )
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}  ${OpenMP_CXX_FLAGS}" )
    
    set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} -maxrregcount=64  -Xcompiler=\"${OpenMP_CXX_FLAGS}\"" )
    set(CMAKE_CUDA_ARCHITECTURES 70)
    set(CMAKE_CUDA_FLAGS_RELEASE "${CMAKE_CUDA_FLAGS_RELEASE} -lineinfo" )
    set(CMAKE_CUDA_FLAGS_DEBUG "${CMAKE_CUDA_FLAGS_DEBUG} -lineinfo --ptxas-options=-v" )
    # set(CMAKE_CUDA_FLAGS_DEBUG "${CMAKE_CUDA_FLAGS_DEBUG} -lineinfo --ptxas-options=-v" )
    # set(CMAKE_CUDA_FLAGS_DEBUG "${CMAKE_CUDA_FLAGS_DEBUG} -G --ptxas-options=-v" )
    
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}" )
    set(CMAKE_SHARE_LINKER_FLAGS "${CMAKE_SHARE_LINKER_FLAGS} ${OpenMP_SHARE_LINKER_FLAGS}" ) 
    #TARGET_COMPILE_OPTIONS(graph_mining PRIVATE -Wall ${OpenMP_CXX_FLAGS})
endif()


# set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
# add_subdirectory(modules/googletest)
# MESSAGE("ADD GOOGLE TEST")

find_package(MPI REQUIRED)
if(MPI_FOUND)
    SET(CMAKE_CXX_COMPILER mpicxx)   
    MESSAGE("MPI FOUND")
endif()

ADD_SUBDIRECTORY(src)
# ADD_SUBDIRECTORY(test)
ADD_SUBDIRECTORY(tianhe)
ADD_SUBDIRECTORY(gpu)
ADD_SUBDIRECTORY(code_gen)
ADD_SUBDIRECTORY(auto)

MESSAGE("CMAKE_C_FLAGS = " ${CMAKE_C_FLAGS})
MESSAGE("CMAKE_CXX_FLAGS = " ${CMAKE_CXX_FLAGS})
MESSAGE("CMAKE_CXX_FLAGS_RELEASE = " ${CMAKE_CXX_FLAGS_RELEASE})
MESSAGE("CMAKE_CXX_FLAGS_DEBUG = " ${CMAKE_CXX_FLAGS_DEBUG})
MESSAGE("CMAKE_CUDA_FLAGS = " ${CMAKE_CUDA_FLAGS})
MESSAGE("CMAKE_CUDA_FLAGS_RELEASE = " ${CMAKE_CUDA_FLAGS_RELEASE})
MESSAGE("CMAKE_CUDA_FLAGS_DEBUG = " ${CMAKE_CUDA_FLAGS_DEBUG})
MESSAGE("CMAKE_EXE_LINKER_FLAGS = "  ${CMAKE_EXE_LINKER_FLAGS})
MESSAGE("PROJECT BINARY DIR = " ${PROJECT_BINARY_DIR})
MESSAGE("INCLUDE DIRECTORIES = " ${CPLUS_INCLUDE_PATH})
MESSAGE("CMAKE_BUILD_TYPE = " ${CMAKE_BUILD_TYPE})
MESSAGE("CMAKE_INSTALL_PREFIX = " ${CMAKE_INSTALL_PREFIX})
MESSAGE("OpenMP_EXE_LINKER_FLAGS = " ${OpenMP_EXE_LINKER_FLAGS})
